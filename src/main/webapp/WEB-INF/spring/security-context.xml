<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- security-context.xml  : 시큐리티 관련 모든 처리 -->
	
	<!-- 시큐리티 관련 객체 생성 -->
	<bean id="customAccessDenied" class="com.eatit.security.CustomAccessDeniedHandler" />
	<bean id="customLoginSuccess" class="com.eatit.security.CustomLoginSuccessHandler"/>
	
	<!-- <bean id="customNoopPasswordEncoder" class="com.itwillbs.security.CustomNoopPasswordEncoder"/> -->
	<bean id="bcryptPasswordEncoder" 
	      class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	
	<!-- 시큐리티 웹 설정 -->
	<security:http>
		
		<!-- 각 주소별 권한을 부여 -->
		<security:intercept-url pattern="/*" access="hasRole('ROLE_ADMIN')"/>
			
		<!-- 접근권한 확인하기위한 로그인페이지(기본값) -->
<!-- 	<security:form-login/> -->
		<security:form-login login-page="/members/memberLogin"
		                     authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- 접근거부 처리(403)  -->
<!-- 	<security:access-denied-handler error-page="/accessErr"/> -->
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<!-- 로그아웃  -->
		<security:logout invalidate-session="true" logout-url="/members/memberLogout" />
		
		
	</security:http>
	<!-- 시큐리티 웹 설정 -->
	
	<!-- 인증매니저 -->
	<security:authentication-manager>
		<!-- 인증 처리 담당자  -->
		<security:authentication-provider>
		  	<!-- 사용자 인증(출입증 발급-JDBC) -->		  	
		  	<security:jdbc-user-service data-source-ref="dataSource" 
		  	                            users-by-username-query="select id,pw,active from member where id=?"  
		  	                            authorities-by-username-query="select id,auth from member_auth where id=?" />
		    <security:password-encoder ref="bcryptPasswordEncoder"/>

		</security:authentication-provider>
	</security:authentication-manager>
	<!-- 인증매니저 -->
</beans>
